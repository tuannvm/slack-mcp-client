replicaCount: 1

image:
  repository: ghcr.io/tuannvm/slack-mcp-client
  pullPolicy: IfNotPresent
  tag: "latest" # Override this with a specific version in production

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  clusterRoleName: ""

networkPolicy:
  enabled: true
  type: "kubernetes" # Options: "kubernetes", "cilium"

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables
env:
  # Required environment variables
  # SLACK_BOT_TOKEN: ""  # Set this in an external secret
  # SLACK_APP_TOKEN: ""  # Set this in an external secret
  # OPENAI_API_KEY: ""   # Set this in an external secret
  OPENAI_MODEL: "gpt-4o"
  MCP_MODE: "sse"
  LOG_LEVEL: "info"

# Config file (config.json)
configMap:
  create: false
  data: {}
  #data:
  #  config.json: |
  #    {
  #      "$schema": "https://github.com/tuannvm/slack-mcp-client/schema/config-schema.json",
  #      "version": "2.0",
  #      "slack": {
  #        "botToken": "${SLACK_BOT_TOKEN}",
  #        "appToken": "${SLACK_APP_TOKEN}"
  #      },
  #      "llm": {
  #        "provider": "openai",
  #        "providers": {
  #          "openai": {
  #            "model": "gpt-4o",
  #            "apiKey": "${OPENAI_API_KEY}"
  #          }
  #        }
  #      },
  #      "mcpServers": {
  #        "kubernetes": {
  #          "command": "npx",
  #          "args": ["mcp-server-kubernetes"],
  #          "initializeTimeoutSeconds": 30
  #        }
  #      }
  #    }

# If you want to use external secret for the environment variables, you can use the following:
# Example:
# secret:
#   enabled: true
#   name: "my-secret"
secret:
  enabled: false
  name: ""
